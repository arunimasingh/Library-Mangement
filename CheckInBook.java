/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package library;

import com.db.Connection.DbConnection;
import java.sql.*;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nivi
 */
public class CheckInBook extends javax.swing.JFrame {

    private String book_isbn;
    private String card_no;
    private String borrower;
    private DbConnection db;
    private Connection con;
    private Statement s;
    private String query;
    private ResultSet rs,ress;
    private Statement st;

    /**
     * Creates new form CheckInBook
     */
    public CheckInBook() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnCheckIn = new javax.swing.JButton();
        isbn = new javax.swing.JTextField();
        Card_no = new javax.swing.JTextField();
        borrowername = new javax.swing.JTextField();
        btnHome = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        CheckIn = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Library Management System");
        setBounds(new java.awt.Rectangle(100, 50, 1000, 800));
        setPreferredSize(new java.awt.Dimension(1286, 735));

        jLabel1.setText("Check In Book");

        jLabel2.setText("Book ISBN *");

        jLabel3.setText("Card_no *");

        jLabel4.setText("Borrower name");

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnCheckIn.setText("Check-In");
        btnCheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckInActionPerformed(evt);
            }
        });

        isbn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isbnActionPerformed(evt);
            }
        });

        Card_no.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Card_noActionPerformed(evt);
            }
        });

        borrowername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrowernameActionPerformed(evt);
            }
        });

        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        CheckIn.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Loan_id", "Book_ISBN", "Card_no", "Borrower Name", "Branch_no", "Check-Out date", "Due_Date", "Fine"
            }
        ));
        jScrollPane1.setViewportView(CheckIn);

        jLabel5.setText("* required fields");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(315, 315, 315)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(174, 174, 174)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(isbn, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                                .addComponent(borrowername))
                            .addComponent(Card_no, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(215, 215, 215)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnSearch)
                                .addGap(140, 140, 140)
                                .addComponent(btnReset)
                                .addGap(127, 127, 127)
                                .addComponent(btnCheckIn)
                                .addGap(130, 130, 130)
                                .addComponent(btnHome)))))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(61, 61, 61)
                        .addComponent(isbn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Card_no, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(borrowername, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch)
                    .addComponent(btnReset)
                    .addComponent(btnCheckIn)
                    .addComponent(btnHome))
                .addGap(24, 24, 24)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void borrowernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrowernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_borrowernameActionPerformed

    private void isbnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isbnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_isbnActionPerformed

    private void Card_noActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Card_noActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Card_noActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        book_isbn=isbn.getText();
        card_no=Card_no.getText();
        borrower=borrowername.getText();
        btnCheckIn.setEnabled(true);
        if(book_isbn.isEmpty()||card_no.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Card no and ISBN are mandatory");
            return;
        }
        try
        {
                model1=(DefaultTableModel)CheckIn.getModel();
                db = new DbConnection();
		con = db.getConnection();
                s = con.createStatement();
                
                query="SELECT isbn from BOOK WHERE isbn='"+book_isbn+"';";
                rs=s.executeQuery(query);
                while (!rs.isBeforeFirst()) {
                        JOptionPane.showMessageDialog(this, "Invalid ISBN");
			return;
			}
				
		query="SELECT card_no from borrower WHERE card_no = '"+card_no+"';";
		rs=s.executeQuery(query);
		while (!rs.isBeforeFirst()) {
			JOptionPane.showMessageDialog(this, "Invalid card number");
			return;
			}
		if(!borrower.isEmpty()){		
                    query="SELECT card_no from BORROWER WHERE Fname like '%"+borrower+"%' or lname like '%"+borrower+"%';";
                    rs=s.executeQuery(query);
                    while (!rs.isBeforeFirst()) {
			JOptionPane.showMessageDialog(this, "Borrower Name does not exist");
			return;
                    }
                    query="SELECT book_loans.card_no from BOOK_LOANs join borrower on book_loans.card_no=borrower.card_no WHERE book_loans.card_no = '"+card_no+"' and Fname like '%"+borrower+"%' or lname like '%"+borrower+"%';";
                    rs=s.executeQuery(query);
                    while (!rs.isBeforeFirst()) {
			JOptionPane.showMessageDialog(this, "card number and borrower name doesnot match");
			return;
                    }
                }
                query="SELECT card_no from BOOK_LOANs WHERE card_no = '"+card_no+"' and isbn='"+book_isbn+"';";
		rs=s.executeQuery(query);
                while (!rs.isBeforeFirst()) {
			JOptionPane.showMessageDialog(this, "card number and isbn doesnot match");
			return;
			}
                if(borrower.isEmpty())
                {
                query="SELECT loan_id,isbn,bl.card_no,CONCAT(fname,lname) as Borrower_Name,branch_id,date_out,due_date from book_loans bl join borrower b on bl.card_no=b.card_no where isbn='"+book_isbn+"' and bl.card_no='"+card_no+"' and date_in is null;";
                rs=s.executeQuery(query);
                }
                else
                {
                query="SELECT loan_id,isbn,bl.card_no,CONCAT(fname,lname) as Borrower_Name,branch_id,date_out,due_date from book_loans bl join borrower b on bl.card_no=b.card_no where isbn='"+book_isbn+"' and bl.card_no='"+card_no+"'and (fname like '%"+borrower+"%' or lname like '%"+borrower+"%') and date_in is null;";
                rs=s.executeQuery(query);   
                }
                while (!rs.isBeforeFirst()) {
			JOptionPane.showMessageDialog(this, "No records found");
			return;
			}
                while(rs.next())
                {
                    int loan_idz=rs.getInt("loan_id");
                    String isbnz=rs.getString("isbn");
                    String cardnoz=rs.getString("card_no");
                    String name=rs.getString("Borrower_name");
                    int branch=rs.getInt("branch_id");
                    Date dateout=rs.getDate("date_out");
                    Date duedate=rs.getDate("due_date");
                    Double fine=0.0;
                    query="SELECT fine_amt from fines where loan_id="+loan_idz+";";
                    st=con.createStatement();
                    ress=st.executeQuery(query);
                    if(ress.next())
                    {
                        fine=ress.getDouble("fine_amt");
                        
                    }
                    
                    model1.addRow(new Object[] {loan_idz,isbnz,cardnoz,name,branch,dateout,duedate,fine});
                }
                rs.close();
                s.close();
                con.close();
        }
        catch (SQLException exp) {
			JOptionPane.showMessageDialog(this, "Error:" + exp.getMessage());
                    }
        
        
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        isbn.setText("");
        Card_no.setText("");
        borrowername.setText("");
        model1.setRowCount(0);
        
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:
        Home hm=new Home();
        hm.setVisible(true);
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnCheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckInActionPerformed
        // TODO add your handling code here:
        
        int[] row = CheckIn.getSelectedRows();
	try {
		// establish db connection	
		db = new DbConnection();
		con = db.getConnection();
		s = con.createStatement();
                for(int i=0 ;i<row.length;i++){
                        Double fine=Double.parseDouble(((CheckIn.getValueAt(row[i],7)).toString()));
                        if(fine>0.0)
                        {
                            JOptionPane.showMessageDialog(this, "Pay Fine");
                            query="UPDate fines set paid=true where loan_id="+Integer.parseInt(((CheckIn.getValueAt(row[i],0)).toString()))+"";
                            s.executeUpdate(query);
                        }
                        query = "UPDATE BOOK_LOANS SET date_in = current_date() where loan_id ="+Integer.parseInt(((CheckIn.getValueAt(row[i], 0)).toString()))+"";			
			s.executeUpdate(query);
                        JOptionPane.showMessageDialog(this, "Check In done successfully");
                }
                btnCheckIn.setEnabled(false);
                isbn.setText("");
                Card_no.setText("");
                borrowername.setText("");
                model1.setRowCount(0);
                rs.close();
                s.close();
                con.close();
                }
        catch (SQLException e1) {
			JOptionPane.showMessageDialog(this, "Error:" + e1.getMessage());
        }
    }//GEN-LAST:event_btnCheckInActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckInBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckInBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckInBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckInBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckInBook().setVisible(true);
            }
        });
    }
    private javax.swing.table.DefaultTableModel model1;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Card_no;
    private javax.swing.JTable CheckIn;
    private javax.swing.JTextField borrowername;
    private javax.swing.JButton btnCheckIn;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSearch;
    private javax.swing.JTextField isbn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
